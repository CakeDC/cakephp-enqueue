<?php
declare(strict_types=1);

/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org/)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org/)
 * @link          https://cakephp.org CakePHP(tm) Project
 * @since         0.1.0
 * @license       https://opensource.org/licenses/MIT MIT License
 */
namespace Cake\Enqueue;

use Interop\Queue\Message;

class CakeMessage implements Message
{
    /**
     * @var string
     */
    private $body;

    /**
     * @var array
     */
    private $properties;

    /**
     * @var array
     */
    private $headers;

    /**
     * @var bool
     */
    private $redelivered;

    /**
     * @var int
     */
    private $priority;

    /**
     * @var int milliseconds
     */
    private $deliveryDelay;

    /**
     * @var int seconds
     */
    private $redeliverAfter;

    /**
     * @var int milliseconds
     */
    private $timeToLive;

    /**
     * @var string|null
     */
    private $deliveryId;

    /**
     * @var string|null
     */
    private $queue;

    /**
     * Milliseconds, for example 15186054527288.
     *
     * Could be generated by the code: (int) (microtime(true) * 10000)
     *
     * @var int
     */
    private $publishedAt;

    /**
     * @param string $body Message body.
     * @param array  $properties Message properties.
     * @param array  $headers Message headers.
     */
    public function __construct(string $body = '', array $properties = [], array $headers = [])
    {
        $this->body = $body;
        $this->properties = $properties;
        $this->headers = $headers;
        $this->redelivered = false;
        $this->priority = null;
        $this->deliveryDelay = null;
        $this->deliveryId = null;
        $this->redeliverAfter = null;
    }

    /**
     * @param string $body Message body.
     * @return void
     */
    public function setBody(string $body): void
    {
        $this->body = $body;
    }

    /**
     * @return string
     */
    public function getBody(): string
    {
        return $this->body;
    }

    /**
     * @param array $properties Message properties.
     * @return void
     */
    public function setProperties(array $properties): void
    {
        $this->properties = $properties;
    }

    /**
     * @param string $name Property name.
     * @param mixed $value Property value.
     * @return void
     */
    public function setProperty(string $name, $value): void
    {
        $this->properties[$name] = $value;
    }

    /**
     * @return array
     */
    public function getProperties(): array
    {
        return $this->properties;
    }

    /**
     * @param string $name Property name.
     * @param mixed $default Default value.
     * @return mixed|null
     */
    public function getProperty(string $name, $default = null)
    {
        return array_key_exists($name, $this->properties) ? $this->properties[$name] : $default;
    }

    /**
     * @param string $name Header name.
     * @param mixed $value Header value.
     * @return void
     */
    public function setHeader(string $name, $value): void
    {
        $this->headers[$name] = $value;
    }

    /**
     * @param array $headers Message headers.
     * @return void
     */
    public function setHeaders(array $headers): void
    {
        $this->headers = $headers;
    }

    /**
     * @return array
     */
    public function getHeaders(): array
    {
        return $this->headers;
    }

    /**
     * @param string $name Header name.
     * @param mixed $default Default value.
     * @return mixed|null
     */
    public function getHeader(string $name, $default = null)
    {
        return array_key_exists($name, $this->headers) ? $this->headers[$name] : $default;
    }

    /**
     * @return bool
     */
    public function isRedelivered(): bool
    {
        return $this->redelivered;
    }

    /**
     * @param bool $redelivered Message redelivered flag.
     * @return void
     */
    public function setRedelivered(bool $redelivered): void
    {
        $this->redelivered = $redelivered;
    }

    /**
     * @param string|null $replyTo Message reply to header.
     * @return void
     */
    public function setReplyTo(?string $replyTo = null): void
    {
        $this->setHeader('reply_to', $replyTo);
    }

    /**
     * @return string|null
     */
    public function getReplyTo(): ?string
    {
        return $this->getHeader('reply_to');
    }

    /**
     * @return int|null
     */
    public function getPriority(): ?int
    {
        return $this->priority;
    }

    /**
     * @param int|null $priority Message priority.
     * @return void
     */
    public function setPriority(?int $priority = null): void
    {
        $this->priority = $priority;
    }

    /**
     * @return int|null
     */
    public function getDeliveryDelay(): ?int
    {
        return $this->deliveryDelay;
    }

    /**
     * Set delay in milliseconds.
     *
     * @param int|null $deliveryDelay Message delivery delay.
     * @return void
     */
    public function setDeliveryDelay(?int $deliveryDelay = null): void
    {
        $this->deliveryDelay = $deliveryDelay;
    }

    /**
     * @return int
     */
    public function getTimeToLive(): ?int
    {
        return $this->timeToLive;
    }

    /**
     * Set time to live in milliseconds.
     *
     * @param int|null $timeToLive TTL for message.
     * @return void
     */
    public function setTimeToLive(?int $timeToLive = null): void
    {
        $this->timeToLive = $timeToLive;
    }

    /**
     * @param string|null $correlationId Correlation id.
     * @return void
     */
    public function setCorrelationId(?string $correlationId = null): void
    {
        $this->setHeader('correlation_id', $correlationId);
    }

    /**
     * @return string|null
     */
    public function getCorrelationId(): ?string
    {
        return $this->getHeader('correlation_id', null);
    }

    /**
     * @param string|null $messageId Message id.
     * @return void
     */
    public function setMessageId(?string $messageId = null): void
    {
        $this->setHeader('message_id', $messageId);
    }

    /**
     * @return string|null
     */
    public function getMessageId(): ?string
    {
        return $this->getHeader('message_id', null);
    }

    /**
     * @return int|null
     */
    public function getTimestamp(): ?int
    {
        $value = $this->getHeader('timestamp');

        return $value ?? null;
    }

    /**
     * @param int|null $timestamp Message timestamp.
     * @return void
     */
    public function setTimestamp(?int $timestamp = null): void
    {
        $this->setHeader('timestamp', $timestamp);
    }

    /**
     * @return string|null
     */
    public function getDeliveryId(): ?string
    {
        return $this->deliveryId;
    }

    /**
     * @param string|null $deliveryId Message delivery id.
     * @return void
     */
    public function setDeliveryId(?string $deliveryId = null): void
    {
        $this->deliveryId = $deliveryId;
    }

    /**
     * @return int
     */
    public function getRedeliverAfter(): int
    {
        return $this->redeliverAfter;
    }

    /**
     * @param int|null $redeliverAfter Message redeliver after time.
     * @return void
     */
    public function setRedeliverAfter(?int $redeliverAfter = null): void
    {
        $this->redeliverAfter = $redeliverAfter;
    }

    /**
     * @return int|null
     */
    public function getPublishedAt(): ?int
    {
        return $this->publishedAt;
    }

    /**
     * @param int|null $publishedAt Message published time.
     * @return void
     */
    public function setPublishedAt(?int $publishedAt = null): void
    {
        $this->publishedAt = $publishedAt;
    }

    /**
     * @return string|null
     */
    public function getQueue(): ?string
    {
        return $this->queue;
    }

    /**
     * @param string|null $queue Message queue name.
     * @return void
     */
    public function setQueue(?string $queue): void
    {
        $this->queue = $queue;
    }
}
